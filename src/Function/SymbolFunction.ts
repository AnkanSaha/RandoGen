 // global typescript types
 type num = number; // Type for number
 type str = string; // Type for string

 // import Gen functions
 import GenerateSymbol from "../gen/SymbolGen"; // function for generating a random word
 
 // function for generating a random number
/**
 * This TypeScript function generates a random string of symbols with a specified length.
 * @param {num} length - The length parameter is a number that specifies the length of the random
 * string of symbols that will be generated by the function.
 * @returns a Promise that resolves to a string, which is a randomly generated string of symbols with a
 * length specified by the `length` parameter.
 */
 export default async function GenerateSymbolIDsync(length: num): Promise<str> {
/* Defining an array of symbols that will be used to generate a random string of symbols in the
`GenerateSymbol` function. The array contains various symbols such as exclamation mark, at sign,
hash, dollar sign, etc. */
  // Symbol Array
  const Symbols: str[] = ["!", "@", "#", "$", "%", "^", "&", "*", "(", ")", "-", "_", "=", "+", "[", "]", "{", "}", ";", ":", "<", ".", ">", "/", "?", "|", "\\", "~", "`"]; // Symbol Array
 
     let Result:str = await GenerateSymbol(length, Symbols); // Generate the Random Number
 
     return Result; // Return the Result
 };